openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/v1/ambassadors/:
    get:
      operationId: api_v1_ambassadors_list
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ambassador'
          description: ''
    post:
      operationId: api_v1_ambassadors_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ambassador'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ambassador'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ambassador'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ambassador'
          description: ''
  /api/v1/ambassadors/{id}/:
    get:
      operationId: api_v1_ambassadors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Амбассадор.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ambassador'
          description: ''
    put:
      operationId: api_v1_ambassadors_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Амбассадор.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ambassador'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ambassador'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ambassador'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ambassador'
          description: ''
    patch:
      operationId: api_v1_ambassadors_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Амбассадор.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAmbassador'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAmbassador'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAmbassador'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ambassador'
          description: ''
    delete:
      operationId: api_v1_ambassadors_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Амбассадор.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/auth/token/login/:
    post:
      operationId: api_v1_auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/v1/auth/token/logout/:
    post:
      operationId: api_v1_auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/content/:
    get:
      operationId: api_v1_content_list
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Content'
          description: ''
    post:
      operationId: api_v1_content_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Content'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Content'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
  /api/v1/content/{id}/:
    get:
      operationId: api_v1_content_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контент.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
    put:
      operationId: api_v1_content_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контент.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Content'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Content'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
    patch:
      operationId: api_v1_content_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контент.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContent'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
    delete:
      operationId: api_v1_content_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контент.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Ambassador:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ya_edu:
          type: string
        amb_goals:
          type: string
        full_name:
          type: string
          title: Полное имя
          maxLength: 255
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          title: Пол
        country:
          type: string
          title: Страна
          maxLength: 100
        city:
          type: string
          title: Город
          maxLength: 100
        address:
          type: string
          title: Адрес проживания
          maxLength: 255
        postal_code:
          type: string
          title: Индекс
          maxLength: 20
        email:
          type: string
          title: Адрес проживания
          maxLength: 255
        phone_number:
          type: string
          title: Номер телефона
          maxLength: 20
        telegram:
          type: string
          title: Ник в телеграме
          maxLength: 100
        edu:
          type: string
          title: Образование
          maxLength: 1000
        work:
          type: string
          title: Место работы
          maxLength: 1000
        study_goal:
          type: string
          title: Цель обучения
          maxLength: 1000
        blog_url:
          type: string
          nullable: true
          title: Ссылка на блоги
          maxLength: 255
        clothing_size:
          allOf:
          - $ref: '#/components/schemas/ClothingSizeEnum'
          title: Размер одежды
        shoe_size:
          type: string
          title: Размер обуви
          maxLength: 50
        additional_comments:
          type: string
          nullable: true
          title: Дополнительная информация
          maxLength: 2000
        status:
          allOf:
          - $ref: '#/components/schemas/AmbassadorStatusEnum'
          title: Статус амбассадора
        reg_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
      required:
      - address
      - amb_goals
      - city
      - clothing_size
      - country
      - edu
      - email
      - full_name
      - gender
      - id
      - phone_number
      - postal_code
      - reg_date
      - shoe_size
      - study_goal
      - telegram
      - work
      - ya_edu
    AmbassadorStatusEnum:
      enum:
      - active
      - paused
      - not_ambassador
      - pending
      type: string
      description: |-
        * `active` - Активный
        * `paused` - На паузе
        * `not_ambassador` - Не амбассадор
        * `pending` - Уточняется
    ClothingSizeEnum:
      enum:
      - XS
      - S
      - M
      - L
      - XL
      type: string
      description: |-
        * `XS` - XS
        * `S` - S
        * `M` - M
        * `L` - L
        * `XL` - XL
    Content:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          title: Имя и Фамилия
          maxLength: 255
        telegram:
          type: string
          title: Ник в телеграме
          maxLength: 100
        link:
          type: string
          title: Ссылка на контент
          maxLength: 200
        guide:
          type: boolean
          title: В рамках Гайда?
        status:
          allOf:
          - $ref: '#/components/schemas/ContentStatusEnum'
          title: Статус контента
        created_date:
          type: string
          format: date
          readOnly: true
          title: Дата создания
        ambassador:
          type: integer
          nullable: true
      required:
      - created_date
      - full_name
      - guide
      - id
      - link
      - telegram
    ContentStatusEnum:
      enum:
      - new
      - approved
      - rejected
      type: string
      description: |-
        * `new` - Новая публикация
        * `approved` - Одобрена
        * `rejected` - Не одобрена
    GenderEnum:
      enum:
      - М
      - Ж
      type: string
      description: |-
        * `М` - Мужской
        * `Ж` - Женский
    PatchedAmbassador:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ya_edu:
          type: string
        amb_goals:
          type: string
        full_name:
          type: string
          title: Полное имя
          maxLength: 255
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          title: Пол
        country:
          type: string
          title: Страна
          maxLength: 100
        city:
          type: string
          title: Город
          maxLength: 100
        address:
          type: string
          title: Адрес проживания
          maxLength: 255
        postal_code:
          type: string
          title: Индекс
          maxLength: 20
        email:
          type: string
          title: Адрес проживания
          maxLength: 255
        phone_number:
          type: string
          title: Номер телефона
          maxLength: 20
        telegram:
          type: string
          title: Ник в телеграме
          maxLength: 100
        edu:
          type: string
          title: Образование
          maxLength: 1000
        work:
          type: string
          title: Место работы
          maxLength: 1000
        study_goal:
          type: string
          title: Цель обучения
          maxLength: 1000
        blog_url:
          type: string
          nullable: true
          title: Ссылка на блоги
          maxLength: 255
        clothing_size:
          allOf:
          - $ref: '#/components/schemas/ClothingSizeEnum'
          title: Размер одежды
        shoe_size:
          type: string
          title: Размер обуви
          maxLength: 50
        additional_comments:
          type: string
          nullable: true
          title: Дополнительная информация
          maxLength: 2000
        status:
          allOf:
          - $ref: '#/components/schemas/AmbassadorStatusEnum'
          title: Статус амбассадора
        reg_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
    PatchedContent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          title: Имя и Фамилия
          maxLength: 255
        telegram:
          type: string
          title: Ник в телеграме
          maxLength: 100
        link:
          type: string
          title: Ссылка на контент
          maxLength: 200
        guide:
          type: boolean
          title: В рамках Гайда?
        status:
          allOf:
          - $ref: '#/components/schemas/ContentStatusEnum'
          title: Статус контента
        created_date:
          type: string
          format: date
          readOnly: true
          title: Дата создания
        ambassador:
          type: integer
          nullable: true
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
